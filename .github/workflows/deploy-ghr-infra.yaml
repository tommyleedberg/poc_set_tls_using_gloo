name: Deploy Github Runner VM Infrastructure

# This can be refactored once the naming conventions for DP 2.0 are put into place as we should no longer need to ask for the resource group name or resource name of the nsg/dmz
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment name where configuration is stored'     
        required: true 
      githubRepoUrl:
        description: 'The repository to link the Github runner to.'
        required: true
      githubRepoToken:
        description: 'The token to set up the Github runner.'
        required: true

jobs:
  deploy:
    name: Deploy GitHub Runner Infrastructure
    runs-on: [ubuntu-latest]
    
    steps:       
    - name: Checkout Etp Infra Repo
      uses: actions/checkout@v2  
      
    - name: Checkout Action Get Variables Repo
      uses: actions/checkout@v2
      with:
          repository: ETP-Cloud/action-get-variables
          token: ${{ secrets.ETP_GITHUB_TOKEN }}
          path: etp-get-vars
            
    - name: Get variables from config/${{ github.event.inputs.env }}/deploy-ghr-infra
      id: env-variables
      uses: ./etp-get-vars
      with: 
          variable-set: 'config/${{ github.event.inputs.env }}/deploy-ghr-infra'
          
    - name: Update ARM parameters file with values from config file
      uses: microsoft/variable-substitution@v1
      id: parameters-file-replacement
      with:
        files: "templates/shared/dmz-gh-runner/vm-creation.parameters.json"
      env:
        parameters.prefix.value: ${{ steps.env-variables.outputs.prefix }}
        parameters.env.value: ${{ steps.env-variables.outputs.env }}
        parameters.adminUsername.value: ${{ steps.env-variables.outputs.adminUsername }}
        parameters.adminPassword.value: ${{ secrets.GH_RUNNER_PASSWORD }}
        parameters.dmzVNetSubscriptionId.value: ${{ steps.env-variables.outputs.subscriptionId }}
        parameters.dmzVNetResourceGroupName.value: ${{ steps.env-variables.outputs.dmzVNetResourceGroupName }}
        parameters.dmzVNetResourceName.value: ${{ steps.env-variables.outputs.dmzVNetResourceName }}
        parameters.ghRunnerNSGSubscriptionId.value: ${{ steps.env-variables.outputs.subscriptionId }}
        parameters.ghRunnerNSGResourceGroupName.value: ${{ steps.env-variables.outputs.dmzVNetResourceGroupName }}
        parameters.ghRunnerNSGResourceName.value: ${{ steps.env-variables.outputs.ghRunnerNSGResourceName }}
        parameters.githubRepoUrl.value: ${{ github.event.inputs.githubRepoUrl }}
        parameters.githubRepoToken.value: ${{ github.event.inputs.githubRepoToken }}
        parameters.githubRunnerConfigurationScriptUri.value: ${{ steps.env-variables.outputs.githubRunnerConfigurationScriptRawUri }}?token=${{ secrets.ETP_GITHUB_TOKEN }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # Azure Service Principle

    - name: Set Azure Subscription
      run: az account set --subscription ${{ steps.env-variables.outputs.subscriptionId }} 

    - name: Create Resource Group
      run: az group create --name etp-rg-ghr-tsl --location "East US"    

    - name: Deploy Arm Template
      uses: azure/arm-deploy@v1
    
      with:        
        resourceGroupName: etp-rg-ghr-tsl
        template: "templates/shared/dmz-gh-runner/vm-creation.template.json"
        parameters: "templates/shared/dmz-gh-runner/vm-creation.parameters.json"
        deploymentMode: Incremental
        deploymentName: Create_Github_Runner_VM_Infra
