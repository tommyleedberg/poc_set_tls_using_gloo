name: Install GitHub Runner Dependencies

on:
  workflow_dispatch:

jobs:   
  updateSystem:
    name: Update and Upgrade apt
    runs-on: [dmz-runner]
    
    steps:
     - name: Update and Upgrade
       run: sudo apt update -y && sudo apt upgrade -y

  installHomebrew:
    name: Install Homebrew
    runs-on: [dmz-runner]
    needs: [updateSystem] 
    defaults:
      run:
        working-directory:  /home/etpAdmin/
        
    steps:
      - name: Install Homebrew sliently
        run: sudo apt install linuxbrew-wrapper -y
        
      - name: Run brew for the first time to create the .linuxbrew directory
        run: sudo -u etpAdmin -i brew -h
        
      - name: Test that linuxbrew exists and update the shell path with it
        run: test -d /home/etpAdmin/.linuxbrew && eval $(/home/etpAdmin/.linuxbrew/bin/brew shellenv)
             
      - name: Update etpAdmins profile 
        run: test -r /home/etpAdmin/.profile && echo "eval $(/home/etpAdmin/.linuxbrew/bin/brew shellenv)" >>/home/etpAdmin/.profile
        
        
  installTools:
    name: Install tools
    runs-on: [dmz-runner]
    needs: [installHomebrew]
    defaults:
      run:
        working-directory:  /home/etpAdmin/    

    steps:
      - name: Install Azure cli
        continue-on-error: true
        run: sudo -u etpAdmin -i brew install azure-cli

      - name: Install Node
        continue-on-error: true
        run: sudo -u etpAdmin -i brew install node

      - name: Install Helm
        continue-on-error: true
        run: sudo -u etpAdmin -i brew install helm

      - name: Install KubeCtl
        continue-on-error: true
        run: sudo -u etpAdmin -i brew install kubectl

      - name: Install GlooCtl
        continue-on-error: true
        run: sudo -u etpAdmin -i brew install glooctl

      - name: Install Go
        continue-on-error: true
        run: sudo -u etpAdmin -i brew install go
        
  validateTools:
      name: Validate Tools are Installed
      runs-on: [dmz-runner]
      needs: [installTools]
      
      # This is a very basic way to validate. We should add some more logic here to validate tools are specific versions.
      steps:
      - name: Validate Azure cli is installed
        run: az -v

      - name: Validate Node is installed 
        continue-on-error: true
        run: node -v

      - name: Validate Helm is installed
        continue-on-error: true
        run: helm version

        # instead of doing a version check with kubectl do a help check to validate it's installed.
        # at this point kubectl isnt connected to a cluster so kubectl version returns an exit code of 1 which fails this step
      - name: Validate KubeCtl is installed
        continue-on-error: true
        run: kubectl --help

      - name: Validate GlooCtl is installed
        continue-on-error: true
        run: glooctl version

      - name: Validate Go is installed
        continue-on-error: true
        run: go version

